@model PagedList.IPagedList<Airlines.Data.Entities.Race>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Races";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="text-center font-weight-bolder">Races page</h2>


@using (Html.BeginForm("Index", "Races", FormMethod.Get))
{
    <p class="text-center font-weight-bold searchcolor">
        Find by number: @Html.TextBox("number", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}

@using (Html.BeginForm("Filter", "Races", FormMethod.Post, new { @class = "border-primary m-auto text-center paramcolor" }))
{
    @Html.ValidationSummary(false, "", new { @class = "text-danger" })
    <div class="font-weight-bold mb-2">Search using parameters(all 3 are required):</div>
    <div id="divinRace" class="d-md-inline-flex">
        <div>
            Departure from: @Html.TextBox("newDeparture", ViewBag.Departure as string)
        </div>
        <div>
            Destination: @Html.TextBox("newDestination", ViewBag.Destination as string)
        </div>
        <div>
            Choose date: <input type="date" name="newDate" value=" @ViewBag.Date as date " />
        </div>
        <div class="text-center mt-md-3 mt-lg-0">
            <input type="submit" value="Search" />
        </div>
    </div>
}
<div class="table-wrap">
    <table class="table">
        <tr>
            <th>
                @Html.ActionLink("Number", "Index", new { sortOrder = ViewBag.IDSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            </th>
            <th>
                Departure
            </th>
            <th>
                Destination
            </th>
            <th>
                Date
            </th>
            <th>
                Status
            </th>
        </tr>

        @foreach (var item in Model)
        {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.ID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Departure)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Destinaton)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Date)
        </td>
        @if (item.IsDeparted == true)
        {
            <td>
                In flight
            </td>
        }

        else
        {
            <td>
                Incoming race
            </td>

        }
    </tr>
        }

    </table>
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
</div>